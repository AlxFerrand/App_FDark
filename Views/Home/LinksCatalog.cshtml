@model _LinksCatalogViewModel;
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<div class="row mt-3">
    <nav class="col-12" aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-area="" asp-controller="Home" asp-route-extId="@Model.ContentExtension.Id" asp-route-contentTypeId="0" asp-action="ContentCatalog">@Model.ContentExtension.Name</a></li>
            <li class="breadcrumb-item"><a <a asp-area="" asp-controller="Home" asp-route-extId="@Model.ContentExtension.Id" asp-route-contentTypeId="@Model.ContentTypeSelected.Id" asp-action="ContentCatalog">@Model.ContentTypeSelected.Name</a></li>
            <li class="breadcrumb-item active" aria-current="page" ">
                @Model.ContentSelected.Name
            </li>
        </ol>
    </nav>
</div>

@if (Model.Videos.Count() > 0)
{
    <h5 class="text-decoration-underline text-secondary">Videos :</h5>
    <div class="row m-0 w-100 row-cols-1 row-cols-md-1 row-cols-lg-2 row-cols-xl-3 row-cols-xxl-4">
                    @foreach (var v in Model.Videos)
                    {
            <article class="col p-2">
                <!-- Déclaration du composant -->
                <div class="card bg-dark shadow">
                    <div class="border-bottom">
                        <div class="row justify-content-between align-items-center ">
                            <div class="col-9 ms-1">
                                <a href="@v.Url" target="_blank" class="text-truncate text-truncate--2 text-decoration-none text-white"><h4>@v.Label
                                            @if (v.Status == 2)
                                            {
                                    <sup class="text-secondary fs-6">signalé</sup>
                                            }
                                    </h4>
                                </a>
                            </div>
                            <div class="col">
                                <div class="d-flex justify-content-end p-2">
                                                @if (SignInManager.IsSignedIn(User))
                                                {
                                        <div class="pb-1">
                                            <div class="dropstart">
                                                <button class="btn options" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                    <svg xmlns="http://www.w3.org/2000/svg" height="20px" viewBox="0 0 128 512">
                                                        <style>
                                                            svg {
                                                                fill: #424243
                                                            }</style>
                                                        <path d="M64 360a56 56 0 1 0 0 112 56 56 0 1 0 0-112zm0-160a56 56 0 1 0 0 112 56 56 0 1 0 0-112zM120 96A56 56 0 1 0 8 96a56 56 0 1 0 112 0z" />
                                                    </svg>
                                                </button>
                                                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                                                @if (!User.IsInRole("Admin"))
                                                                {
                                                        <a class="dropdown-item" href="#">Favoris</a>
                                                        <a class="dropdown-item" href="Signal?id=@v.Id">Signaler</a>
                                                                }
                                                                @if (User.IsInRole("Admin"))
                                                                {
                                                        <a class="dropdown-item" href="#">Favoris</a>
                                                        <a class="dropdown-item" href="../Links/Edit?id=@v.Id&redirId=@Model.ContentSelected.Id">Editer</a>
                                                        <a class="dropdown-item" href="Archived?id=@v.Id">Archiver</a>
                                                                }
                                                </div>
                                            </div>
                                        </div>
                                                }       
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- Image située en haut -->
                    <div class="card-img-container p-2">
                        <iframe class="card-image rounded-3" src="https://www.youtube.com/embed/@v.VideoId" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
                    </div>
                    <!-- Corps de la carte -->
                    <div class="card-body">
                        <!-- Titre -->
                        <div class="bg-light h-100 rounded-3 p-2">
                            <p class="card-description text-truncate text-truncate--2">@v.Description</p>
                        </div>
                    </div>
                </div>
            </article>
                    }
    </div>
}
@if (Model.Sites.Count() > 0)
{
    <h5 class="text-decoration-underline text-secondary">Sites :</h5>
    <div class="row m-0 w-100 row-cols-1 row-cols-md-1 row-cols-lg-2 row-cols-xl-3 row-cols-xxl-4">
        @foreach (var s in Model.Sites)
        {
        <article class="col p-2">
            <!-- Déclaration du composant -->
            <div class="card bg-dark shadow">
                <div class="border-bottom">
                    <div class="row justify-content-between align-items-center ">
                        <div class="col-9 ms-1">
                                <a href="@s.Url" target="_blank" class="text-truncate text-truncate--2 text-decoration-none text-white"><h4>@s.Label</h4></a>
                        </div>
                        <div class="col">
                            <div class="d-flex justify-content-end p-2">
                                <div class="pb-1">
                                    <button class="btn" type="button">
                                        <svg xmlns="http://www.w3.org/2000/svg" height="20px" viewBox="0 0 128 512">
                                            <style>
                                                svg {
                                                    fill: #424243
                                                }</style>
                                            <path d="M64 360a56 56 0 1 0 0 112 56 56 0 1 0 0-112zm0-160a56 56 0 1 0 0 112 56 56 0 1 0 0-112zM120 96A56 56 0 1 0 8 96a56 56 0 1 0 112 0z" />
                                        </svg>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- Image située en haut -->
                <div class="card-img-container p-2">
                    <a href="@s.Url" target="_blank">
                        <img class="card-image rounded-2"
                                src="/img/@s.Picture" />
                    </a>
                </div>
                <!-- Corps de la carte -->
                <div class="card-body">
                    <!-- Titre -->
                    <div class ="bg-light h-100 rounded-3 p-2">
                        <p class="card-description text-truncate text-truncate--2">@s.Description</p>
                    </div>
                    
                </div>
            </div>
        </article>
        }
    </div>
}
@if (Model.Images.Count() > 0)
{
    <h5 class="text-decoration-underline text-secondary">Images :</h5>
    <div class="row m-0 w-100 row-cols-1 row-cols-md-1 row-cols-lg-2 row-cols-xl-3 row-cols-xxl-4">
            @foreach (var i in Model.Images)
            {
            <article onclick="ShowPicture('@i.Id')" class="article col p-2">
                <!-- Déclaration du composant -->
                <div class="card bg-dark shadow">
                    <div class="border-bottom">
                        <div class="row justify-content-between align-items-center ">
                            <div class="col-9 ms-1">
                                <h4 class="text-truncate text-truncate--2 text-decoration-none text-white">@i.Label @i.Id</h4>
                            </div>
                            <div class="col">
                                <div class="d-flex justify-content-end p-2">
                                    <div class="pb-1">
                                        <button class="btn" type="button">
                                            <svg xmlns="http://www.w3.org/2000/svg" height="20px" viewBox="0 0 128 512">
                                                <style>
                                                    svg {
                                                        fill: #424243
                                                    }</style>
                                                <path d="M64 360a56 56 0 1 0 0 112 56 56 0 1 0 0-112zm0-160a56 56 0 1 0 0 112 56 56 0 1 0 0-112zM120 96A56 56 0 1 0 8 96a56 56 0 1 0 112 0z" />
                                            </svg>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- Image située en haut -->
                    @if (i.Pictures.Count() > 1)
                    {
                        <div class="card-img-container row p-2">
                            <div class="col pe-1 mx-h-100">
                                    <img class="image1 rounded-2 ps-1"
                                         src="/img/@i.Pictures[0]" />
                            </div>
                            <div class="col ps-1 pe-1 mx-h-100">
                                    <img class=" image2 rounded-2"
                                         src="/img/@i.Pictures[1]" />
                                @if (i.Pictures.Count() > 2)
                                {
                                        <img class=" image3 rounded-2"
                                                src="/img/@i.Pictures[2]" />
                                }
                            </div>
                        </div>
                        }
                        @if (i.Pictures.Count() == 1)
                        {
                        <div class="card-img-container p-2">
                                <img class="card-image rounded-2"
                                        src="/img/@i.Pictures[0]" />
                        </div>
                        }
                    <!-- Corps de la carte -->
                    <div class="card-body">
                        <!-- Titre -->
                        <div class="bg-light h-100 rounded-3 p-2">
                            <p class="card-description text-truncate text-truncate--2">@i.Description</p>
                        </div>
                    </div>
                </div>
            </article>
            }
    </div>
}
<div id="PicturesModal">
</div>

